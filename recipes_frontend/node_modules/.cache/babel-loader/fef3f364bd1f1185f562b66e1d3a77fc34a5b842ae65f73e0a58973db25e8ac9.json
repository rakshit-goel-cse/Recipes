{"ast":null,"code":"var _jsxFileName = \"F:\\\\programs\\\\react-native\\\\recipes_frontend\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionElement = (options, setState, id) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: selectedOption,\n    onChange: event => setState(event.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select an option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), options.map((value, index) => {\n      /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this);\n    })]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\nfunction Search({\n  courseOption,\n  dietOption\n}) {\n  _s();\n  const [searchText, setsearchText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => setsearchText(event.target.value),\n      value: searchText,\n      placeholder: \"Search keywords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"ekddzSUrwEFmKb5WfqRrrShAw1s=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","optionElement","options","setState","id","value","selectedOption","onChange","event","target","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Search","courseOption","dietOption","_s","searchText","setsearchText","type","placeholder","_c","$RefreshReg$"],"sources":["F:/programs/react-native/recipes_frontend/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst optionElement=(options,setState,id)=>{\r\n    return(\r\n        <select key={id} value={selectedOption} onChange={(event)=>setState(event.target.value)}>\r\n        <option value=\"\">Select an option</option>\r\n        {options.map((value,index)=>{\r\n            <option value={value}>value</option>\r\n        })}\r\n      </select>\r\n    );\r\n}\r\n\r\nfunction Search({courseOption,dietOption}) {\r\n    const [searchText, setsearchText] = useState(\"\");\r\n    return(\r\n        <div>\r\n\r\n\r\n            <input type=\"text\" onChange={(event)=>setsearchText(event.target.value)} value={searchText} placeholder=\"Search keywords\"></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAACA,CAACC,OAAO,EAACC,QAAQ,EAACC,EAAE,KAAG;EACvC,oBACIJ,OAAA;IAAiBK,KAAK,EAAEC,cAAe;IAACC,QAAQ,EAAGC,KAAK,IAAGL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAE;IAAAK,QAAA,gBACxFV,OAAA;MAAQK,KAAK,EAAC,EAAE;MAAAK,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCZ,OAAO,CAACa,GAAG,CAAC,CAACV,KAAK,EAACW,KAAK,KAAG;MACxB,aAAAhB,OAAA;QAAQK,KAAK,EAAEA,KAAM;QAAAK,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IACxC,CAAC,CAAC;EAAA,GAJWV,EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKT,CAAC;AAEf,CAAC;AAED,SAASG,MAAMA,CAAC;EAACC,YAAY;EAACC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,oBACIE,OAAA;IAAAU,QAAA,eAGIV,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAAChB,QAAQ,EAAGC,KAAK,IAAGc,aAAa,CAACd,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAE;MAACA,KAAK,EAAEgB,UAAW;MAACG,WAAW,EAAC;IAAiB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjI,CAAC;AAEd;AAACM,EAAA,CATQH,MAAM;AAAAQ,EAAA,GAANR,MAAM;AAWf,eAAeA,MAAM;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}