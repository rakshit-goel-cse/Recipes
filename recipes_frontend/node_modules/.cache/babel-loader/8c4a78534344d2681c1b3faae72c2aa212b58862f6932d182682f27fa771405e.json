{"ast":null,"code":"var _jsxFileName = \"F:\\\\programs\\\\react-native\\\\recipes_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from './pages/Search.js';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [options, setoptions] = useState([]);\n  const fetchData = () => {\n    let url = '192.168.29.231:1234/options';\n    fetch(url).then(response => {\n      // Check if response is okay\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parse response body as JSON and return the parsed data\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log('options- ' + options), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9NJ1fvA6kilZXY9Cj91xEJ0yRN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Search","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","options","setoptions","fetchData","url","fetch","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/programs/react-native/recipes_frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Search from './pages/Search.js';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [options, setoptions] = useState([]);\n\n  const fetchData=()=>{\n    let url='192.168.29.231:1234/options';\n\n    fetch(url)\n    .then(response=>{\n      // Check if response is okay\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    // Parse response body as JSON and return the parsed data\n    return response.json();\n    })\n    .then(data=>{\n      console.log(data);\n    })\n    .catch(error=>{\n      console.error(error);\n    })\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n  \n  return (\n    <>\n    {console.log('options- '+options)}\n    <Search/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,SAAS,GAACA,CAAA,KAAI;IAClB,IAAIC,GAAG,GAAC,6BAA6B;IAErCC,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAACC,QAAQ,IAAE;MACd;MACF,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAE;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAE;MACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAAAE,SAAA;IAAAkB,QAAA,GACCJ,OAAO,CAACC,GAAG,CAAC,WAAW,GAACZ,OAAO,CAAC,eACjCL,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACP,CAAC;AAEP;AAACpB,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}